<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PickerItems.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PickerItems</TokenIdentifier>
			<Abstract type="html">Data class to support UIPickerController that is used for selecting devices</Abstract>
			<DeclaredIn>PickerItems.h</DeclaredIn>
            
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PickerItems/setItems:</TokenIdentifier>
			<Abstract type="html">The array of devices by full name</Abstract>
			<DeclaredIn>PickerItems.h</DeclaredIn>
			
			<Declaration>@property (retain, readonly) NSArray *items</Declaration>
			
			
			<Anchor>//api/name/items</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PickerItems/items</TokenIdentifier>
			<Abstract type="html">The array of devices by full name</Abstract>
			<DeclaredIn>PickerItems.h</DeclaredIn>
			
			<Declaration>@property (retain, readonly) NSArray *items</Declaration>
			
			
			<Anchor>//api/name/items</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PickerItems/items</TokenIdentifier>
			<Abstract type="html">The array of devices by full name</Abstract>
			<DeclaredIn>PickerItems.h</DeclaredIn>
			
			<Declaration>@property (retain, readonly) NSArray *items</Declaration>
			
			
			<Anchor>//api/name/items</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PickerItems/setDeviceAbbr:</TokenIdentifier>
			<Abstract type="html">The array of device abbreviations in the same order as the devices in items array.</Abstract>
			<DeclaredIn>PickerItems.h</DeclaredIn>
			
			<Declaration>@property (retain, readonly) NSArray *deviceAbbr</Declaration>
			
			
			<Anchor>//api/name/deviceAbbr</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PickerItems/deviceAbbr</TokenIdentifier>
			<Abstract type="html">The array of device abbreviations in the same order as the devices in items array.</Abstract>
			<DeclaredIn>PickerItems.h</DeclaredIn>
			
			<Declaration>@property (retain, readonly) NSArray *deviceAbbr</Declaration>
			
			
			<Anchor>//api/name/deviceAbbr</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PickerItems/deviceAbbr</TokenIdentifier>
			<Abstract type="html">The array of device abbreviations in the same order as the devices in items array.</Abstract>
			<DeclaredIn>PickerItems.h</DeclaredIn>
			
			<Declaration>@property (retain, readonly) NSArray *deviceAbbr</Declaration>
			
			
			<Anchor>//api/name/deviceAbbr</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PickerItems/count</TokenIdentifier>
			<Abstract type="html">The number of items in the items array.  It is dynamic based on the contents of the array
for the items.</Abstract>
			<DeclaredIn>PickerItems.h</DeclaredIn>
			
			<Declaration>- (NSInteger)count</Declaration>
			
			<ReturnValue><Abstract type="html">An integer value of the number of devices in the array.</Abstract></ReturnValue>
			<Anchor>//api/name/count</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PickerItems/deviceAtIndex:</TokenIdentifier>
			<Abstract type="html">The method returns the string value based on the index passed to it.  This method
is not designed to be used outside of the class. If the index is out of range, the first
element is returned.</Abstract>
			<DeclaredIn>PickerItems.h</DeclaredIn>
			
			<Declaration>- (NSString *)deviceAtIndex:(NSInteger)index</Declaration>
			<Parameters>
				<Parameter>
					<Name>index</Name>
					<Abstract type="html">The integer value used for getting the device type name.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The string that is the name of the device type.</Abstract></ReturnValue>
			<Anchor>//api/name/deviceAtIndex:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PickerItems/getAbbreviatedDeviceString:</TokenIdentifier>
			<Abstract type="html">This method returns the device abbreviation based on the index that is passed to it.  It makes a
few assumptions. The items array and the deviceAbbr array are in sync with each other.</Abstract>
			<DeclaredIn>PickerItems.h</DeclaredIn>
			
			<Declaration>- (NSString *)getAbbreviatedDeviceString:(NSInteger)device</Declaration>
			<Parameters>
				<Parameter>
					<Name>device</Name>
					<Abstract type="html">is an integer that references an index for the device name.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The abbreviated device name for use with creating the final name for a particular device.</Abstract></ReturnValue>
			<Anchor>//api/name/getAbbreviatedDeviceString:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
        
        
	</File>
</Tokens>